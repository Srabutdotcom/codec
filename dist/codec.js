var o=new TextEncoder,y=new TextDecoder,c=class{#e=btoa;constructor(e={data:null,advance:!1}){let{data:t,advance:r}=e;this.raw=t,r&&(this.#e=l)}async encode(e=this.raw){if(!arguments.length&&!this.raw)throw new Error("data is undefined");let t=e===null?"null":typeof e;switch(t){case"undefined":return this.#e(JSON.stringify([t,"undefined"]));case"number":return this.encodeNumber(t,e);case"null":case"boolean":case"string":return this.#e(JSON.stringify([t,e]));case"bigint":return this.#e(JSON.stringify([t,e.toString()]));case"symbol":return this.#e(JSON.stringify([t,e.description]));case"function":return this.#e(JSON.stringify([t,e.toString()]));case"object":return await this.encodeObjectVariant(e);default:return this.#e(JSON.stringify([t,e]))}}encodeNumber(e,t){let r;switch(t){case t.isNaN:{r="NaN";break}case-1/0:{r="-Infinity";break}case 1/0:{r="Infinity";break}default:r=t;break}return this.#e(JSON.stringify([e,r]))}async encodeObjectVariant(e){if(!arguments.length)throw new Error("data is undefined");let t=e?.constructor??Object;switch(t){case RegExp:return this.#e(JSON.stringify([t.name,{source:e.source,flags:e.flags}]));case Error:return this.#e(JSON.stringify([t.name,{message:e.message,cause:e.cause}]));case Blob:{let r=await e.text();return this.#e(JSON.stringify([t.name,r]))}case ArrayBuffer:case DataView:{let r=y.decode(e);return this.#e(JSON.stringify([t.name,r]))}case Int8Array:case Uint8Array:case Uint8ClampedArray:case Int16Array:case Uint16Array:case Int32Array:case Uint32Array:case Float32Array:case Float64Array:return this.#e(JSON.stringify([t.name,e.toString()]));case BigInt64Array:case BigUint64Array:return this.#e(JSON.stringify([t.name,e.toString()]));case String:case Number:case Boolean:case Date:return this.#e(JSON.stringify([t.name,e.valueOf()]));case Array:return await this.encodeArray(e);case Object:return await this.encodeObject(e);case Map:return await this.encodeMap(e);case Set:return await this.encodeSet(e);default:return await this.encodeObject(e)}}async encodeArray(e){let t=[];for(let r of e)t.push(await this.encode(r));return this.#e(JSON.stringify(["Array",t]))}async encodeObject(e){let t={};for(let r in e)t[r]=await this.encode(e[r]);return this.#e(JSON.stringify(["Object",t]))}async encodeMap(e){let t=await this.encode([...e.entries()]);return this.#e(JSON.stringify(["Map",t]))}async encodeSet(e){let t=await this.encode([...e.values()]);return this.#e(JSON.stringify(["Set",t]))}},i=class{#e=atob;constructor(e={data:null,advance:!1}){let{data:t,advance:r}=e;this.raw=t,r&&(this.#e=f)}decode(e=this.raw){if(!arguments.length&&!this.raw)throw new Error("data is undefined");let[t,r]=JSON.parse(this.#e(e));switch(t){case"string":return r;case"null":return null;case"undefined":return;case"boolean":return r===!0;case"number":return+r;case"bigint":return BigInt(r);case"symbol":return Symbol(r);case"object":return r;case"function":return this.getFunction(r);case"String":return new String(r);case"Number":return new Number(r);case"Boolean":return new Boolean(r);case"Date":return new Date(+r);case"RegExp":return new RegExp(r.source,r.flags);case"Error":return new Error(r.message,{cause:r.cause});case"Blob":return new Blob([r]);case"DataView":return new DataView(o.encode(r).buffer);case"ArrayBuffer":return o.encode(r).buffer;case"Int8Array":return new Int8Array(r.split(","));case"Uint8Array":return new Uint8Array(r.split(","));case"Uint8ClampedArray":return new Uint8ClampedArray(r.split(","));case"Int16Array":return new Int16Array(r.split(","));case"Uint16Array":return new Uint16Array(r.split(","));case"Int32Array":return new Int32Array(r.split(","));case"Uint32Array":return new Uint32Array(r.split(","));case"Float32Array":return new Float32Array(r.split(","));case"Float64Array":return new Float64Array(r.split(","));case"BigInt64Array":return new BigInt64Array(r.split(",").map(s=>BigInt(s)));case"BigUint64Array":return new BigUint64Array(r.split(",").map(s=>BigInt(s)));case"Array":return this.getArray(r);case"Object":return this.getObject(r);case"Map":return new Map(this.decode(r));case"Set":return new Set(this.decode(r));default:return r}}getArray(e){let t=[];for(let r of e){let s=this.decode(r);t.push(s)}return t}getObject(e){let t={};for(let r in e){let s=this.decode(e[r]);t[r]=s}return t}getFunction(e){if(e.match(/^\s*(async\s*)?function/)||e.match(/^\s*class/)||e.match(/^\s*(.*)\s*=>/))return a(e);return Function("return function "+e)();function a(u){return Function("return "+u)()}}};function g(n){return btoa(n).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}function h(n){n=n.replace(/-/g,"+").replace(/_/g,"/");let e=n.length%4;return e&&(n+="=".repeat(4-e)),atob(n)}function f(n){let e=atob(n),t=Uint8Array.from(e,r=>r.codePointAt(0));return new TextDecoder().decode(t)}function l(n){let e=new TextEncoder().encode(n),t=1e4,r="";for(let s=0;s<e.length;s+=t){let a=e.slice(s,s+t);r+=String.fromCodePoint(...a)}return btoa(r)}async function w(n,e){let t=await new c().encode(e);try{Deno.writeTextFileSync(n,t)}catch(r){return new Error(r)}finally{return!0}}async function d(n){let t=await(await fetch(n)).text();return t?new i().decode(t):""}export{i as Decoder,c as Encoder,f as base64ToBytes,h as base64urlDecode,g as base64urlEncode,l as bytesToBase64,d as readencoded,w as writencoded};
